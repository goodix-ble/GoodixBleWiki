# SPI使用经验笔记

[TOC]

## 1. 基本功能介绍

-   各芯片的SPI 模块数量及主要参数

| SoC    | SPI实例    | 主要参数                             |
| ------ | ---------- | ------------------------------------ |
| GR551x | SPIM、SPIS | SPIM最高主频32MHz; FIFO深度8x4字节   |
| GR5525 | SPIM、SPIS | SPIM最高主频48MHz;  FIFO深度16x4字节 |
| GR5526 | SPIM、SPIS | SPIM最高主频48MHz; FIFO深度16x4字节  |
| GR533x | SPIM、SPIS | SPIM最高主频32MHz; FIFO深度8x4字节   |



## 2. 应用笔记

-   使用SPI Master 模块建议均采用软件片选模式
-   当应用场景只需要SPI 提供 MOSI 信号时, 也可以考虑使用QSPI 模块的SPI模式代替
-   SPI Master使用注意事项:
    -   当接收数据时,如果数据量较大或SPI工作频率较高, 如果CPU或DMA取数据速度跟不上 SPI FIFO读入速度, 会发生接收溢出现象, 导致数据丢失。优化方法:
        -   优先采用 DMA 进行传输, DMA的传输带宽远大于CPU, 可以有效降低 接收溢出现象
        -   当采用 DMA 接收数据时, 如果还有溢出现象, 如果应用场景运行, 可以 配置4字节传输宽度, 进一步提高 SPI FIFO的利用率, 改善传输带宽
        -   如果对宽度要求不高的场景, 还可以减少单次数据接收量来降低接收溢出概率
        -   如果进行上述优化后依然存在 接收溢出现象, 请在软件层设计重读逻辑, 当数据溢出发生时, 丢弃上次读取数据, 重新读取一次.
    -   如果使用的硬件控制CS片选信号, 当发送数据时, 如果数据量较大或SPI工作频率较高, CPU或DMA发送速度跟不上 SPI FIFO 的发送速度, 会出行 CS 信号自动拉起的行为, 导致后面的时序数据紊乱. 
        -   优化方法为使用软件方法控制片选信号的拉低和拉高. 

-   SPI 是强时序协议, 当SPI通讯存在异常时, 可尝试使用逻辑分析器抓取 SPI信号, 分析问题的可能性.
-   SPI 驱动提供了三种模式的访问接口: 轮询模式、中断模式、DMA模式．各模式的经验性建议如下，按照建议，会很好的降低接收溢出发生的概率，但概率依然存在．
    -   GR551x 和 GR533x:
        -   轮询模式和中断模式使用条件:
            -   建议单次传输数据量小于 4拍
            -   建议在 SPI 工作频率不大于1MHz 情况下使用
            -   使用场景适用于低频率和小数据量
        -   DMA模式使用条件
            -   单次传输小于 4095 拍的任意数据量
            -   SPI工作频率小于等于 32MHz 下
            -   如果发生接收溢出, 减少单次数据传输量和应用层增加重读机制
    -   GR5525和GR5526:
        -   轮询模式和中断模式使用条件:
            -   建议单次传输数据量小于 8拍
            -   建议在 SPI 工作频率不大于8MHz 情况下使用
            -   使用场景适用于低频率和小数据量
        -   DMA模式使用条件
            -   单次传输小于 4095 拍的任意数据量, 但可通过 LLP 扩展传输数据上限
            -   SPI工作频率小于等于 48MHz 下
            -   如果发生接收溢出, 减少单次数据传输量和应用层增加重读机制



## 3. SPI-FAQ

### 3.1 SPI支持的最大频率是多少?

-   SPI 模块分为SPI Master和SPI Slave, 其中SPI Master支持的最大频率是系统最高频率的二分之一, SPI Master支持的分频系数为 2 ~ 65535 之间的偶数, 不支持奇数分频.
-   各款芯片SPI Master模块的最大频率支持如下:
    -   GR551x 全系列芯片最高主频为64MHz, SPI Master的最大工作频率为 32MHz, 时钟源为系统时钟
    -   GR5525 全系列芯片最高主频为96MHz, SPI Master的最大工作频率为 48MHz, 时钟源为外设时钟
    -   GR5526 全系列芯片最高主频为96MHz, SPI Master的最大工作频率为 48MHz , 时钟源为外设时钟
    -   GR533x 全系列芯片最高主频为64MHz, SPI Master的最大工作频率为 32MHz, 时钟源为外设时钟



### 3.2 什么是软件片选, 什么是硬件片选, 使用有什么区别?

-   软件片选: 在进行SPI 传输前, 由软件拉低控制CS引脚所在的IO；SPI传输完成后, 由软件拉高控制CS引脚所在的IO. CS的行为由软件代码控制。这个时候的CS引脚IO需要配置为 Output 模式
-   硬件片选: SPI的片选信号的拉低和拉高, 全部由芯片的SPI 模块负责, 这个时候CS引脚所在IO需要配置为 CS 功能的 mux模式
-   为什么会存在软件片选?
    -   SPI在发送数据的时候, 有可能因为数据量大、传输速率高或CPU来不及处理等原因, 发送时候向 SPI FIFO喂数据的速度跟不上导致FIFO 变空, 如果这个时候是使用硬件片选, 就会将CS 进行自动拉高释放, 而产生错误的访问时序. 
-   什么时候需要使用软件片选?
    -   当传输数据量比较大、SPI频率配置比较高时, 就建议使用软件片选, 由于数据量大小和频率高低是一个相对概念, 无法精确的基于场景进行计算. 因此建议, 所有使用 SPI 传输的场景, 都启用软件片选. 这个建议适用于 GR551x、GR5525、GR5526、GR533x 所有系列芯片.
    -   SPI 在 app驱动层, 预置了 软件片选支持, 使用的时候注意开启相关控制宏即可. 详情可参考  app_spi.c 文件驱动代码



### 3.3 SPI 接收数据时发生了回调错误事件 APP_SPI_EVT_ERROR, 怎么处理?

-   如果SPI在接收数据的时候, 有可能因为数据量大、传输速率高或CPU来不及处理等原因, 导致 SPI 模块的接收FIFO 被Slave 过来的数据塞满, 发生 FIFO 接收溢出错误 (Receive Overflow Error). 当这个错误发生时, 会通过回调事件 APP_SPI_EVT_ERROR告知用户. 正确的处理方法是, 调用接口重新收一遍数据. 另外, 这种情况, 请使用 DMA 传输模式降低概率
-   如果原因不是上面描述, 同时使用的DMA传输方式的话, 则可能是 DMA 的传输数据量过大. 需要限制DMA单次传输在4095拍以内.